-- Power Saver Program
-- Keep Generators from cycling when batteries are near full or aux power supplies present
-- remember to have batt boxes supply redstone when full
-- init variables
time=0
message=""
--define functions

local function breaker() -- turns input to front into a reset switch
	if rs.getInput("front") ~= true then
		sleep(2)
	else
		os.reboot() -- restart the machine
	end
end
	
local function check()
	if rs.getInput("back") == true then -- if redstone in back
		rs.setOutput("left",true) -- ouptut redstone left
		message="Sleep"
		time = 0
		--i=1
		for x=1,20 do
			print ("++++++")
			print (message)
			print (time)
			print ("======")
			time = time + 10     -- counter for time
			for z=1,5 do
				breaker()
				--i=i+1
				--term.setCursorPos(i,5)
				--print ("*")
			end
			term.clear() -- clear the screen
			term.setCursorPos(1,1)
		end
	else
		rs.setOutput("left",false) -- turn on generator)
		message="Charge"
		time = 0
		--i=1
		for y=1,15 do
			print ("======")
			print (message)
			print (time)
			print ("++++++")
			time = time + 10
			for z=1,5 do
				breaker()
			--	i=i+1
				--term.setCursorPos(i,5)
			--	print ("*")
			end
			term.clear()
			term.setCursorPos(1,1)
		end
	end
end

--set for external monitor
function startMonitor()
  for i=1,#rs.getSides() do
        if peripheral.isPresent(rs.getSides()[i]) and 			
		  peripheral.getType(rs.getSides()[i]) == "monitor" then
          monSide = rs.getSides()[i]
          monitor = peripheral.wrap( monSide )
          return
        end
  end
end

--Main Function line

startMonitor() -- Detect Monitor
term.redirect(monitor) -- output to monitor

while rs.getInput("front") ~= true do
	check()
end
